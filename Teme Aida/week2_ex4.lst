     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0A                          a db 10
    14 00000001 05                          b db 5
    15 00000002 0C                          c db 12
    16 00000003 14                          d db 20
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; (a+b)*(c+d)
    22 00000000 A0[00000000]                    mov AL, [a]
    23 00000005 0205[01000000]                  add AL, [b] ; AL <= AL+b = a+b = 10+5 = 15; AL = a+b
    24                                          
    25 0000000B 8A25[02000000]                  mov AH, [c]
    26 00000011 0225[03000000]                  add AH,[d] ; AH <= AH+d = c+d = 12+20 = 32; AH = c+d
    27                                          
    28 00000017 F6E4                            mul AH ; AX <= AL*AH = 15*32 = 480; AX = (a+b)*(c+d)
    29                                      
    30                                      
    31                                      
    32                                          ; exit(0)
    33 00000019 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 0000001B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
