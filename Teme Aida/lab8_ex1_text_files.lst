     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fprintf, fscanf, fopen, fclose, fread               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fscanf msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fprintf msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import fread msvcrt.dll
    14                                  
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; ...
    19 00000000 FFFFFFFF                    fd dd -1
    20 00000004 7200                        accmode db "r", 0
    21 00000006 766F77656C732E7478-         filename db "vowels.txt"
    21 0000000F 74                 
    22                                      len equ 1
    23                                      ;text times len db 0
    24 00000010 <res 00000064>              buffer resb 100
    25                                      
    26                                      ;descrip_file_print dd -1
    27 00000074 257300                      format db "%s", 0
    28                                  
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      start:
    32                                          ; ...A text file is given. Read the content of the file, count the number of vowels and display the result on the screen.
    33                                          ;The name of text file is defined in the data segment. 
    34                                          
    35 00000000 68[04000000]                    push dword accmode
    36 00000005 68[06000000]                    push dword filename
    37 0000000A FF15[00000000]                  call [fopen]
    38 00000010 83C408                          add esp, 4*2
    39                                          
    40 00000013 A3[00000000]                    mov [fd], eax
    41                                          ;mov edx, 0
    42 00000018 83F800                          cmp eax, 0
    43 0000001B 7458                            je final
    44                                              start_loop:
    45 0000001D FF35[00000000]                          push dword [fd]
    46 00000023 6A01                                    push dword len
    47 00000025 6A01                                    push dword 1
    48 00000027 68[10000000]                            push dword buffer
    49 0000002C FF15[00000000]                          call [fread]
    50 00000032 83C410                                  add esp, 4*4
    51                                                  
    52 00000035 83F800                                  cmp eax, 0
    53 00000038 742C                                    je cleanup
    54 0000003A 833D[10000000]61                            cmp dword[buffer], 'a'
    55 00000041 7513                                            jne next_char
    56 00000043 68[10000000]                                        push dword buffer
    57 00000048 68[74000000]                                        push dword format
    58                                                              ;push dword [descrip_file_print]
    59 0000004D FF15[00000000]                                      call [fprintf]
    60 00000053 83C408                                              add esp, 4*2
    61                                                          next_char
    61          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    62 00000056 68[74000000]                                push dword format
    63                                                      call [printf]
    63          ******************       error: symbol `printf' undefined
    64 0000005B 83C408                                      add esp, 4*2
    65 0000005E EBBD                                jmp start_loop
    66                                          
    67                                          cleanup:
    68 00000060 FF35[00000000]                  push dword [fd]
    69 00000066 FF15[00000000]                  call[fclose]
    70 0000006C 83C404                          add esp, 4
    71                                          
    72                                          final:
    73                                                      
    74                                              
    75                                              
    76                                          
    77                                          
    78                                          
    79                                      
    80                                      
    81                                          ; exit(0)
    82 0000006F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    83 00000071 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
