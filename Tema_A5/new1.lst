     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 616263646566                s1 db 'a', 'b', 'c', 'd', 'e', 'f'
    15                                      l1 equ $-s1 ; compute the length of the string s1 in l1
    16 00000006 3132333435                  s2 db '1', '2', '3', '4', '5'
    17                                      l2 equ $-s2 ; compute the length of the string s2 in l2
    18 0000000B 00<rept>                    d times l2+l1 db 0 ; reserve l2 bytes for the destination string and initialize it
    19                                      
    20                                     
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25                                       
    26                                          ; exit(0)
    27 00000000 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    28 00000002 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
