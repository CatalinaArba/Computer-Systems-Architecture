     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0A                          a db 10
    15 00000001 0F                          b db 15
    16 00000002 05                          c db 5
    17 00000003 6400                        d dw 100
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...3*[20*(b-a+2)-10*c]/5
    22                                          ;a,b,c - byte, d - word
    23 00000000 A0[01000000]                    mov AL,[b]    ;AL=b=15
    24 00000005 8A25[00000000]                  mov AH,[a]    ;AH=a=10
    25 0000000B 28E0                            sub AL,AH   ;AL=AL-AH=b-a=15-10=5
    26 0000000D 0402                            add AL,2    ;AL=AL+2=b-a+2=150+2=7
    27                                          
    28 0000000F B414                            mov AH, 20  ;AH=20
    29 00000011 F6E4                            mul AH; AX=AL*AH=20*(b-a+2)=20*7=140
    30 00000013 6689C3                          mov BX,AX; BX=AX=20*(b-a+2)=140
    31                                          
    32 00000016 B00A                            mov AL,10
    33 00000018 8A15[02000000]                  mov DL,[c];  DL=c=5
    34                                          
    35 0000001E F6E2                            mul DL;   AX=DL*AL=10*c=50
    36 00000020 6629C3                          sub BX,AX; BX=BX-AX=20*(b-a+2)-10*c=140-50=90
    37                                          
    38 00000023 66BA0300                        mov DX,3
    39 00000027 6689D8                          mov AX,BX;  AX=BX=20*(b-a+2)-10*c=140-50=90
    40 0000002A 66F7E2                          mul DX; DX:AX=DX*AX=3*(20*(b-a+2)-10*c)=3*90=270
    41                                          
    42 0000002D 66BE0500                        mov SI,5; DX=5
    43 00000031 66F7F6                          div SI; AX=DX:AX/SI=3*(20*(b-a+2)-10*c)/5=270/5=54
    44                                          
    45                                          
    46                                          
    47                                          
    48                                          
    49                                          
    50                                          
    51                                          ; exit(0)
    52 00000034 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    53 00000036 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
