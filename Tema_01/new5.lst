     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0A                          a db 10
    15 00000001 14                          b db 20
    16 00000002 1E                          c db 30
    17 00000003 28                          d db 40
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...a*d+b*c
    22 00000000 8A25[00000000]                  mov AH,[a]    ;AH=a=10
    23 00000006 A0[03000000]                    mov AL,[d]    ;AL=d=40
    24 0000000B F6E4                            mul AH      ;AX=AL*AH=a*d=10*40=400
    25                                          
    26 0000000D 6689C3                          mov BX,AX   ;BX=AX=a*d=400
    27                                          
    28 00000010 8A25[01000000]                  mov AH,[b]    ;AH=b=20
    29 00000016 A0[02000000]                    mov AL,[c]   ;AL=c=30
    30 0000001B F6E4                            mul AH      ;AX=AL*AH=b*c=20*30=600
    31                                          
    32 0000001D 6601D8                          add AX,BX   ;AX=AX+BX=600+400=1000
    33                                          ; exit(0)
    34 00000020 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 00000022 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
