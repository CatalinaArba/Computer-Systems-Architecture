     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 02                          a db 2
    15 00000001 04                          b db 4
    16 00000002 03                          c db 3
    17 00000003 01                          d db 1
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...(a+d+d)-c+(b+b)
    22 00000000 A0[00000000]                    mov AL,[a] ;AL=a=2
    23 00000005 0205[03000000]                  add AL,[d] ;AL=a+d=2+1=3
    24 0000000B 0205[03000000]                  add AL,[d] ;AL=a+d+d=3+1=4
    25                                          
    26 00000011 8A25[02000000]                  mov AH,[c]  ;AH=c=3
    27 00000017 28E0                            sub AL,AH   ;AL=AL-AH=(a+d+d)-c=4-3=1
    28                                          
    29 00000019 8A25[01000000]                  mov AH,[b] ;AH=b=4
    30 0000001F 0225[01000000]                  add AH,[b]  ;AH=b+b=4+4=8
    31 00000025 00C4                            add AH,AL   ;AH=AH+AL=8+1=9
    32                                          ; exit(0)
    33 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
