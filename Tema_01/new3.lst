     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0500                        a dw 5
    15 00000002 0600                        b dw 6
    16 00000004 0700                        c dw 7
    17 00000006 0800                        d dw 8
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...b+c+d+a-(d+c)
    22 00000000 66A1[02000000]                  mov AX,[b]  ;AX=b=6
    23 00000006 660305[04000000]                add AX,[c]  ;AX=b+c=6+7=13
    24 0000000D 660305[06000000]                add AX,[d]  ;AX=b+c+d=13+8=21
    25 00000014 660305[00000000]                add AX,[a]  ;AX=b+c+d+a=21+5=26
    26                                          
    27 0000001B 668B1D[06000000]                mov BX,[d]  ;BX=d=8
    28 00000022 66031D[04000000]                add BX,[c]  ;BX=d+c=8+7=15
    29                                          
    30 00000029 6629D8                          sub AX,BX   ;AX=AX-BX=26-15=11
    31                                          ; exit(0)
    32 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
